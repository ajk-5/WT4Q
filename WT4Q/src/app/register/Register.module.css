
/* Container: classic paper backdrop, locked between header and footer */
.container {
  min-height: auto;
  display: flex;
  align-items: center;
  justify-content: center;
  font-family: Georgia, "Times New Roman", serif;
  background-color: #EEE9DA;
  background-image:
    radial-gradient(1px 1px at 30% 40%, rgba(0,0,0,.03), transparent 2px),
    radial-gradient(1px 1px at 70% 60%, rgba(0,0,0,.02), transparent 2px);
  background-size: cover;
  background-position: center top;
  background-repeat: no-repeat;
  padding: 1rem;
}

.locked {
  position: fixed;
  top: var(--header-height);
  left: 0;
  right: 0;
  height: var(--lock-height, 100svh);
  min-height: 0;
  z-index: 5;
  overflow: hidden;
}

/* Card: deep bevel effect, no border to impede clicks */
.card {
  position: relative;
  background: #fbf6e9;
  color: #111;
  border-radius: 8px;
  width: 100%;
  max-width: 480px;
  height: auto; /* let page scroll instead of the box */
  overflow: visible;
  padding: 1rem;
  border: 2px solid #111;
  box-shadow:
    inset 0 0 0 2px #fbf6e9,
    0 8px 18px rgba(0,0,0,0.2);
}

/* Decorative gradient bevel overlay without blocking clicks */
.card::before { content: none; }

.title {
  margin: 0 0 .5rem;
  font-size: 2rem;
  font-weight: 700;
  text-align: center;
  color: #111;
}

.error {
  background: var(--error-red);
  color: #fff;
  padding: 0.75rem 1.25rem;
  border-radius: 12px;
  margin-bottom: 1.5rem;
  font-size: 0.95rem;
  box-shadow: 0 4px 10px rgba(0,0,0,0.3);
}

.form {
  display: flex;
  flex-direction: column;
  gap: 0.9rem;
}

.field {
  display: flex;
  flex-direction: column;
  width: 100%;
}

.label {
  margin-bottom: 0.5rem;
  font-size: 1rem;
  color: #222;
  font-weight: 600;
  letter-spacing: 0.5px;
}

/* Input fields: strong 3D inset effect, full clickable, responsive */
.input {
  width: 100%;
  padding: 0.85rem 1rem;
  font-size: 1rem;
  border: 1px solid #111;
  border-radius: 6px;
  background: #fffdf5;
  color: #111;
  box-shadow: inset 0 0 0 1px #d9cda3;
  transition: outline-color .15s ease;
}

.input:focus {
  outline: none;
  outline: 2px solid #333;
}

.fieldError {
  margin-top: 0.25rem;
  font-size: 0.85rem;
  color: var(--error-red);
}

/* Password wrapper: responsive and positions toggle inside */
.passwordWrapper {
  position: relative;
  width: 100%;
}

/* Add right padding to input so button doesnâ€™t overlap text */
.inputWrapper { position: relative; width: 100%; }
.inputIcon { position: absolute; top: 50%; left: 0.75rem; transform: translateY(-50%); color: #555; pointer-events: none; }
.inputWrapper .input { padding-left: 2.5rem; }
.passwordWrapper .input { padding-right: 3rem; padding-left: 2.5rem; }

/* Toggle button inside input */
.toggleButton {
  position: absolute;
  top: 50%;
  right: 0.75rem;
  transform: translateY(-50%);
  background: transparent;
  border: none;
  padding: 0;
  margin: 0;
  cursor: pointer;
  line-height: 1;
  color: #555;
}

.toggleButton:hover { color: #111; }

.toggleButton:focus { outline: none; color: #111; }


.spinner {
  display: inline-block;
  width: 1em;
  height: 1em;
  border: 2px solid rgba(255,255,255,0.6);
  border-top-color: #fff;
  border-radius: 50%;
  animation: spin 0.8s linear infinite;
}

@keyframes spin { to { transform: rotate(360deg); } }

.switch {
  margin-top: 1rem;
  text-align: center;
  font-weight: 600;
}

.switchLink {
  color: var(--primary);
  text-decoration: none;
}

.switchLink:hover {
  text-decoration: underline;
}

.googleButton {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  background: #fff;
  color: #444;
  border: 1px solid #dadce0;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  margin-top: 0.5rem;
}

.googleButton:hover:not(:disabled) {
  background: #f7f7f7;
}

.googleIcon {
  width: 18px;
  height: 18px;
}

.primaryButton {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  padding: 0.8rem 1rem;
  margin-top: .25rem;
  border: 2px solid #111;
  border-radius: 6px;
  background: #111;
  color: #fff5dc;
  font-weight: 700;
  cursor: pointer;
}

.visuallyHidden {
  position: absolute !important;
  width: 1px; height: 1px;
  padding: 0; margin: -1px;
  overflow: hidden; clip: rect(0, 0, 0, 0);
  white-space: nowrap; border: 0;
}

